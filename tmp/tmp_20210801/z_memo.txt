・python 描画速度向上（そもそも描画可能かも）

　　　matplotlib = 基準として別ツールと比較　下記参考。
      plotly     = 遅い (matplotlibの70倍とかかもしれない）https://towardsdatascience.com/matplotlib-vs-plotly-lets-decide-once-and-for-all-ad25a5e43322
　　　mayavi　　　？
      pyQtGraph = matplotlibの7倍速いこともあるとの情報あり。　http://naga-tsuzuki.sblo.jp/article/175118266.html　（しかし、使い方がわからない。サンプルも少なさそうだ。。）
      　　　

　　　★7/6(火)ここから→★動作速度テスト: 直方体(平面orひとつの直方体として) 300 x 500　個　描く　

　　　〇matplotlib 右クリックしたまま動かしてzoom可能。

      ・直方体で描く　C:\kuroda\work\python\work_3Dviewer\my06_★matplotlib_rectangle_Poly3DCollection\my06_matplotlib_rectangle_Poly3DCollection.py.txt
           始点4万点(503) = 約45秒　描画は可能　（python直方体6面なので　直方体個数指定は0.7万点）
           始点24万点(一般）= 約2分　 描画は可能　通常タイプ300x300x600 IMX503の6倍) = python直方体個数指定 = 4.2万点
           
           
      ・平面で描く C:\kuroda\work\python\work_3Dviewer\my05_★matplotlib_2Dto3Dplane
           始点4万点 = 約55秒 描画可能　11:50:30-11:51:14 + 10秒くらい（matplotlib起動まで）
　　　　　 始点24万点 = 5分?  描画可能　12:00:10 ～ 12:04:33　+ 40秒くらい？

      ×使わない　→surfaceで描く  C:\kuroda\work\python\work_3Dviewer\my02_matplotlib-cube04-OK

　　　◆contour or surfaceで描く(処理速ければ)（描き方理解から）

　　　◆直方体を複数描く
　　　★マテリアル色の切り替えできるか？
